#!/usr/bin/python

import os, argparse, subprocess
import re

# parse arguments
parser = argparse.ArgumentParser()
parser.add_argument("fasm", metavar="input.s", help="the MIPS assembly file (ASCII)")
args = parser.parse_args()

fasm = args.fasm
fhex = fasm + ".out"

# run SPIM (the actual MIPS assembler)
SPIM = "./spim"
cmd = [SPIM, "-noexception", "-assemble", "-file", fasm]
subprocess.call(cmd)

# Rename the SPIM output file to have a more descriptice name
# cmd = ["mv", fhex, re.sub('\.s.out$', '.text.dat', fhex)]
# subprocess.call(cmd)

# remove all other files
#cmd = ["rm", fhex + ".*.dat"]
#cmd = str.join(' ', cmd)
#subprocess.call(cmd, shell=True)  # we need a shell to expand the wildcard

with open(fhex, 'r') as f:
    line = f.readlines()
with open(re.sub('\.s.out$', '.text.dat', fhex), 'w') as f:
    f.writelines(line[1:])
del line

# # remove .s.out files
cmd =['rm' , fhex]
subprocess.call(cmd)